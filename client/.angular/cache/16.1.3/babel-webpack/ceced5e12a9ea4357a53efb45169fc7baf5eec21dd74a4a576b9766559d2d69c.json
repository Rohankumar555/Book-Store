{"ast":null,"code":"// HTTP\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst domain = 'http://localhost:8000';\nconst getSingleBookEndpoint = domain + '/book/details/';\nconst createBookEndpoint = domain + '/book/add';\nconst editBookEndpoint = domain + '/book/edit/';\nconst deleteBookEndpoint = domain + '/book/delete/';\nconst rateBookEndpoint = domain + '/book/rate/';\nconst addToFavoritesEndpoint = domain + '/book/addToFavorites/';\nconst searchBookEndpoint = domain + '/book/search';\nexport let BookService = /*#__PURE__*/(() => {\n  class BookService {\n    constructor(http) {\n      this.http = http;\n    }\n    getSingleBook(id) {\n      return this.http.get(getSingleBookEndpoint + id);\n    }\n    createBook(payload) {\n      return this.http.post(createBookEndpoint, payload);\n    }\n    editBook(id, payload) {\n      return this.http.put(editBookEndpoint + id, payload);\n    }\n    deleteBook(id) {\n      return this.http.delete(deleteBookEndpoint + id);\n    }\n    rateBook(id, payload) {\n      return this.http.post(rateBookEndpoint + id, payload);\n    }\n    addToFavourites(id) {\n      return this.http.post(addToFavoritesEndpoint + id, {});\n    }\n    search(query) {\n      return this.http.get(searchBookEndpoint + query);\n    }\n  }\n  BookService.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}