{"ast":null,"code":"// RXJS\nimport { Subject } from 'rxjs';\n// JWT Decoding\nimport decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nexport let HelperService = /*#__PURE__*/(() => {\n  class HelperService {\n    constructor() {\n      this.isUserLogged = new Subject();\n      this.searchQuery = new Subject();\n      this.cartStatus = new Subject();\n    }\n    saveSession(token) {\n      localStorage.setItem('token', token);\n    }\n    clearSession() {\n      localStorage.clear();\n    }\n    getProfile() {\n      try {\n        const decoded = decode(this.getToken());\n        return decoded.sub;\n      } catch (err) {\n        return {};\n      }\n    }\n    isLoggedIn() {\n      try {\n        const decoded = decode(this.getToken());\n        if (decoded.exp > Date.now() / 1000) {\n          return true;\n        }\n        return false;\n      } catch (err) {\n        return false;\n      }\n    }\n    isAdmin() {\n      try {\n        const decoded = decode(this.getToken());\n        if (decoded.exp < Date.now() / 1000 || !decoded.sub.isAdmin) {\n          return false;\n        }\n        return true;\n      } catch (err) {\n        return false;\n      }\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n  }\n  HelperService.ɵfac = function HelperService_Factory(t) {\n    return new (t || HelperService)();\n  };\n  HelperService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HelperService,\n    factory: HelperService.ɵfac,\n    providedIn: 'root'\n  });\n  return HelperService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}